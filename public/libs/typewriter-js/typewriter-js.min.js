!(function (e, t) { typeof exports === 'object' && typeof module === 'object' ? module.exports = t() : typeof define === 'function' && define.amd ? define('Typewriter', [], t) : typeof exports === 'object' ? exports.Typewriter = t() : e.Typewriter = t() }(typeof self !== 'undefined' ? self : this, () => (() => { const e = { 75: function (e) { (function () { let t, n, r, o, a, s; typeof performance !== 'undefined' && performance !== null && performance.now ? e.exports = function () { return performance.now() } : typeof process !== 'undefined' && process !== null && process.hrtime ? (e.exports = function () { return (t() - a) / 1e6 }, n = process.hrtime, o = (t = function () { let e; return 1e9 * (e = n())[0] + e[1] })(), s = 1e9 * process.uptime(), a = o - s) : Date.now ? (e.exports = function () { return Date.now() - r }, r = Date.now()) : (e.exports = function () { return (new Date()).getTime() - r }, r = (new Date()).getTime()) }).call(this) }, 4087: (e, t, n) => { for (var r = n(75), o = typeof window === 'undefined' ? n.g : window, a = ['moz', 'webkit'], s = 'AnimationFrame', i = o['request' + s], u = o['cancel' + s] || o['cancelRequest' + s], l = 0; !i && l < a.length; l++)i = o[a[l] + 'Request' + s], u = o[a[l] + 'Cancel' + s] || o[a[l] + 'CancelRequest' + s]; if (!i || !u) { let c = 0; let p = 0; const d = []; i = function (e) { if (d.length === 0) { const t = r(); const n = Math.max(0, 16.666666666666668 - (t - c)); c = n + t, setTimeout(function () { const e = d.slice(0); d.length = 0; for (let t = 0; t < e.length; t++) if (!e[t].cancelled) try { e[t].callback(c) } catch (e) { setTimeout(function () { throw e }, 0) } }, Math.round(n)) } return d.push({ handle: ++p, callback: e, cancelled: !1 }), p }, u = function (e) { for (let t = 0; t < d.length; t++)d[t].handle === e && (d[t].cancelled = !0) } }e.exports = function (e) { return i.call(o, e) }, e.exports.cancel = function () { u.apply(o, arguments) }, e.exports.polyfill = function (e) { e || (e = o), e.requestAnimationFrame = i, e.cancelAnimationFrame = u } } }; const t = {}; function n (r) { const o = t[r]; if (void 0 !== o) return o.exports; const a = t[r] = { exports: {} }; return e[r].call(a.exports, a, a.exports, n), a.exports }n.n = e => { const t = e && e.__esModule ? () => e.default : () => e; return n.d(t, { a: t }), t }, n.d = (e, t) => { for (const r in t)n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, { enumerable: !0, get: t[r] }) }, n.g = (function () { if (typeof globalThis === 'object') return globalThis; try { return this || new Function('return this')() } catch (e) { if (typeof window === 'object') return window } }()), n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t); const r = {}; return (() => { 'use strict'; n.d(r, { default: () => S }); const e = n(4087); const t = n.n(e); const o = function (e) { return new RegExp(/<[a-z][\s\S]*>/i).test(e) }; const a = function (e) { const t = document.createElement('div'); return t.innerHTML = e, t.childNodes }; const s = function (e, t) { return Math.floor(Math.random() * (t - e + 1)) + e }; const i = 'TYPE_CHARACTER'; const u = 'REMOVE_CHARACTER'; const l = 'REMOVE_ALL'; const c = 'REMOVE_LAST_VISIBLE_NODE'; const p = 'PAUSE_FOR'; const d = 'CALL_FUNCTION'; const f = 'ADD_HTML_TAG_ELEMENT'; const v = 'CHANGE_DELETE_SPEED'; const h = 'CHANGE_DELAY'; const m = 'CHANGE_CURSOR'; const y = 'PASTE_STRING'; const g = 'HTML_TAG'; function E (e, t) { const n = Object.keys(e); if (Object.getOwnPropertySymbols) { let r = Object.getOwnPropertySymbols(e); t && (r = r.filter(function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable })), n.push.apply(n, r) } return n } function w (e) { for (let t = 1; t < arguments.length; t++) { var n = arguments[t] != null ? arguments[t] : {}; t % 2 ? E(Object(n), !0).forEach(function (t) { N(e, t, n[t]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : E(Object(n)).forEach(function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t)) }) } return e } function T (e) { return (function (e) { if (Array.isArray(e)) return b(e) }(e)) || (function (e) { if (typeof Symbol !== 'undefined' && e[Symbol.iterator] != null || e['@@iterator'] != null) return Array.from(e) }(e)) || (function (e, t) { if (e) { if (typeof e === 'string') return b(e, t); let n = Object.prototype.toString.call(e).slice(8, -1); return n === 'Object' && e.constructor && (n = e.constructor.name), n === 'Map' || n === 'Set' ? Array.from(e) : n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? b(e, t) : void 0 } }(e)) || (function () { throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.') }()) } function b (e, t) { (t == null || t > e.length) && (t = e.length); for (var n = 0, r = new Array(t); n < t; n++)r[n] = e[n]; return r } function A (e, t) { for (let n = 0; n < t.length; n++) { const r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, 'value' in r && (r.writable = !0), Object.defineProperty(e, r.key, r) } } function N (e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e } const S = (function () { function n (r, E) { const b = this; if ((function (e, t) { if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function') }(this, n)), N(this, 'state', { cursorAnimation: null, lastFrameTime: null, pauseUntil: null, eventQueue: [], eventLoop: null, eventLoopPaused: !1, reverseCalledEvents: [], calledEvents: [], visibleNodes: [], initialOptions: null, elements: { container: null, wrapper: document.createElement('span'), cursor: document.createElement('span') } }), N(this, 'options', { strings: null, cursor: '|', delay: 'natural', pauseFor: 1500, deleteSpeed: 'natural', loop: !1, autoStart: !1, devMode: !1, skipAddStyles: !1, wrapperClassName: 'Typewriter__wrapper', cursorClassName: 'Typewriter__cursor', stringSplitter: null, onCreateTextNode: null, onRemoveNode: null }), N(this, 'setupWrapperElement', function () { b.state.elements.container && (b.state.elements.wrapper.className = b.options.wrapperClassName, b.state.elements.cursor.className = b.options.cursorClassName, b.state.elements.cursor.innerHTML = b.options.cursor, b.state.elements.container.innerHTML = '', b.state.elements.container.appendChild(b.state.elements.wrapper), b.state.elements.container.appendChild(b.state.elements.cursor)) }), N(this, 'start', function () { return b.state.eventLoopPaused = !1, b.runEventLoop(), b }), N(this, 'pause', function () { return b.state.eventLoopPaused = !0, b }), N(this, 'stop', function () { return b.state.eventLoop && ((0, e.cancel)(b.state.eventLoop), b.state.eventLoop = null), b }), N(this, 'pauseFor', function (e) { return b.addEventToQueue(p, { ms: e }), b }), N(this, 'typeOutAllStrings', function () { return typeof b.options.strings === 'string' ? (b.typeString(b.options.strings).pauseFor(b.options.pauseFor), b) : (b.options.strings.forEach(function (e) { b.typeString(e).pauseFor(b.options.pauseFor).deleteAll(b.options.deleteSpeed) }), b) }), N(this, 'typeString', function (e) { const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null; if (o(e)) return b.typeOutHTMLString(e, t); if (e) { const n = b.options || {}; const r = n.stringSplitter; const a = typeof r === 'function' ? r(e) : e.split(''); b.typeCharacters(a, t) } return b }), N(this, 'pasteString', function (e) { const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null; return o(e) ? b.typeOutHTMLString(e, t, !0) : (e && b.addEventToQueue(y, { character: e, node: t }), b) }), N(this, 'typeOutHTMLString', function (e) { const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null; const n = arguments.length > 2 ? arguments[2] : void 0; const r = a(e); if (r.length > 0) for (let o = 0; o < r.length; o++) { const s = r[o]; const i = s.innerHTML; s && s.nodeType !== 3 ? (s.innerHTML = '', b.addEventToQueue(f, { node: s, parentNode: t }), n ? b.pasteString(i, s) : b.typeString(i, s)) : s.textContent && (n ? b.pasteString(s.textContent, t) : b.typeString(s.textContent, t)) } return b }), N(this, 'deleteAll', function () { const e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'natural'; return b.addEventToQueue(l, { speed: e }), b }), N(this, 'changeDeleteSpeed', function (e) { if (!e) throw new Error('Must provide new delete speed'); return b.addEventToQueue(v, { speed: e }), b }), N(this, 'changeDelay', function (e) { if (!e) throw new Error('Must provide new delay'); return b.addEventToQueue(h, { delay: e }), b }), N(this, 'changeCursor', function (e) { if (!e) throw new Error('Must provide new cursor'); return b.addEventToQueue(m, { cursor: e }), b }), N(this, 'deleteChars', function (e) { if (!e) throw new Error('Must provide amount of characters to delete'); for (let t = 0; t < e; t++)b.addEventToQueue(u); return b }), N(this, 'callFunction', function (e, t) { if (!e || typeof e !== 'function') throw new Error('Callbak must be a function'); return b.addEventToQueue(d, { cb: e, thisArg: t }), b }), N(this, 'typeCharacters', function (e) { const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null; if (!e || !Array.isArray(e)) throw new Error('Characters must be an array'); return e.forEach(function (e) { b.addEventToQueue(i, { character: e, node: t }) }), b }), N(this, 'removeCharacters', function (e) { if (!e || !Array.isArray(e)) throw new Error('Characters must be an array'); return e.forEach(function () { b.addEventToQueue(u) }), b }), N(this, 'addEventToQueue', function (e, t) { const n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]; return b.addEventToStateProperty(e, t, n, 'eventQueue') }), N(this, 'addReverseCalledEvent', function (e, t) { const n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]; const r = b.options.loop; return r ? b.addEventToStateProperty(e, t, n, 'reverseCalledEvents') : b }), N(this, 'addEventToStateProperty', function (e, t) { const n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]; const r = arguments.length > 3 ? arguments[3] : void 0; const o = { eventName: e, eventArgs: t || {} }; return b.state[r] = n ? [o].concat(T(b.state[r])) : [].concat(T(b.state[r]), [o]), b }), N(this, 'runEventLoop', function () { b.state.lastFrameTime || (b.state.lastFrameTime = Date.now()); const e = Date.now(); const n = e - b.state.lastFrameTime; if (!b.state.eventQueue.length) { if (!b.options.loop) return; b.state.eventQueue = T(b.state.calledEvents), b.state.calledEvents = [], b.options = w({}, b.state.initialOptions) } if (b.state.eventLoop = t()(b.runEventLoop), !b.state.eventLoopPaused) { if (b.state.pauseUntil) { if (e < b.state.pauseUntil) return; b.state.pauseUntil = null } let r; const o = T(b.state.eventQueue); const a = o.shift(); if (!(n <= (r = a.eventName === c || a.eventName === u ? b.options.deleteSpeed === 'natural' ? s(40, 80) : b.options.deleteSpeed : b.options.delay === 'natural' ? s(120, 160) : b.options.delay))) { const E = a.eventName; const A = a.eventArgs; switch (b.logInDevMode({ currentEvent: a, state: b.state, delay: r }), E) { case y:case i:var N = A.character; var S = A.node; var C = document.createTextNode(N); var _ = C; b.options.onCreateTextNode && typeof b.options.onCreateTextNode === 'function' && (_ = b.options.onCreateTextNode(N, C)), _ && (S ? S.appendChild(_) : b.state.elements.wrapper.appendChild(_)), b.state.visibleNodes = [].concat(T(b.state.visibleNodes), [{ type: 'TEXT_NODE', character: N, node: _ }]); break; case u:o.unshift({ eventName: c, eventArgs: { removingCharacterNode: !0 } }); break; case p:var O = a.eventArgs.ms; b.state.pauseUntil = Date.now() + parseInt(O); break; case d:var L = a.eventArgs; var D = L.cb; var M = L.thisArg; D.call(M, { elements: b.state.elements }); break; case f:var x = a.eventArgs; var P = x.node; var j = x.parentNode; j ? j.appendChild(P) : b.state.elements.wrapper.appendChild(P), b.state.visibleNodes = [].concat(T(b.state.visibleNodes), [{ type: g, node: P, parentNode: j || b.state.elements.wrapper }]); break; case l:var R = b.state.visibleNodes; var k = A.speed; var Q = []; k && Q.push({ eventName: v, eventArgs: { speed: k, temp: !0 } }); for (let F = 0, H = R.length; F < H; F++)Q.push({ eventName: c, eventArgs: { removingCharacterNode: !1 } }); k && Q.push({ eventName: v, eventArgs: { speed: b.options.deleteSpeed, temp: !0 } }), o.unshift.apply(o, Q); break; case c:var I = a.eventArgs.removingCharacterNode; if (b.state.visibleNodes.length) { const U = b.state.visibleNodes.pop(); const q = U.type; const G = U.node; const Y = U.character; b.options.onRemoveNode && typeof b.options.onRemoveNode === 'function' && b.options.onRemoveNode({ node: G, character: Y }), G && G.parentNode.removeChild(G), q === g && I && o.unshift({ eventName: c, eventArgs: {} }) } break; case v:b.options.deleteSpeed = a.eventArgs.speed; break; case h:b.options.delay = a.eventArgs.delay; break; case m:b.options.cursor = a.eventArgs.cursor, b.state.elements.cursor.innerHTML = a.eventArgs.cursor }b.options.loop && (a.eventName === c || a.eventArgs && a.eventArgs.temp || (b.state.calledEvents = [].concat(T(b.state.calledEvents), [a]))), b.state.eventQueue = o, b.state.lastFrameTime = e } } }), r) if (typeof r === 'string') { const A = document.querySelector(r); if (!A) throw new Error('Could not find container element'); this.state.elements.container = A } else this.state.elements.container = r; E && (this.options = w(w({}, this.options), E)), this.state.initialOptions = w({}, this.options), this.init() } let r, E; return r = n, (E = [{ key: 'init', value: function () { let e, t; this.setupWrapperElement(), this.addEventToQueue(m, { cursor: this.options.cursor }, !0), this.addEventToQueue(l, null, !0), !window || window.___TYPEWRITER_JS_STYLES_ADDED___ || this.options.skipAddStyles || (e = '.Typewriter__cursor{-webkit-animation:Typewriter-cursor 1s infinite;animation:Typewriter-cursor 1s infinite;margin-left:1px}@-webkit-keyframes Typewriter-cursor{0%{opacity:0}50%{opacity:1}100%{opacity:0}}@keyframes Typewriter-cursor{0%{opacity:0}50%{opacity:1}100%{opacity:0}}', (t = document.createElement('style')).appendChild(document.createTextNode(e)), document.head.appendChild(t), window.___TYPEWRITER_JS_STYLES_ADDED___ = !0), !0 === this.options.autoStart && this.options.strings && this.typeOutAllStrings().start() } }, { key: 'logInDevMode', value: function (e) { this.options.devMode && console.log(e) } }]) && A(r.prototype, E), Object.defineProperty(r, 'prototype', { writable: !1 }), n }()) })(), r.default })()))
